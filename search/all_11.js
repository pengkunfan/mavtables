var searchData=
[
  ['tcgetattr',['tcgetattr',['../classUnixSyscalls.html#aff43bb2f3abab1686e8eb910d4ed8da4',1,'UnixSyscalls']]],
  ['tcsetattr',['tcsetattr',['../classUnixSyscalls.html#a6f11a97df0e5fe0967bb839479b7bf66',1,'UnixSyscalls']]],
  ['test_5faccept_2ecpp',['test_Accept.cpp',['../test__Accept_8cpp.html',1,'']]],
  ['test_5faction_2ecpp',['test_Action.cpp',['../test__Action_8cpp.html',1,'']]],
  ['test_5faddresspool_2ecpp',['test_AddressPool.cpp',['../test__AddressPool_8cpp.html',1,'']]],
  ['test_5fcall_2ecpp',['test_Call.cpp',['../test__Call_8cpp.html',1,'']]],
  ['test_5fcase',['TEST_CASE',['../test__Accept_8cpp.html#abffd73a74d4137a5563d731a53ec2429',1,'TEST_CASE(&quot;Accept&apos;s are constructable.&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#af4d77a17c6ee3519a1b9984bbc59c065',1,'TEST_CASE(&quot;Accept&apos;s are comparable.&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#a7fc0818ce812796d9f51f8ed480f5d5b',1,'TEST_CASE(&quot;Accept&apos;s &apos;action&apos; method determines what to do with a &quot; &quot;packet/address combination.&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#adadf08900a4bfafb6c42a310ebcdd94e',1,'TEST_CASE(&quot;Accept&apos;s are printable (without a condition or a priority).&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#af2ed2acbce1abfd6423e430d51cabd0f',1,'TEST_CASE(&quot;Accept&apos;s are printable (without a condition but with a priority).&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#ac4eb379f0e634d2ff51b9e76ba5b009e',1,'TEST_CASE(&quot;Accept&apos;s are printable (with a condition but without a priority).&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#a5c716571334efa6e2668483adcae684d',1,'TEST_CASE(&quot;Accept&apos;s are printable (with a condition and a priority).&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Accept_8cpp.html#a2dd6f0c6bd5acef5f5edc2613d1bdab6',1,'TEST_CASE(&quot;Accept&apos;s &apos;clone&apos; method returns a polymorphic copy.&quot;, &quot;[Accept]&quot;):&#160;test_Accept.cpp'],['../test__Action_8cpp.html#acb1c354a698a1597e7d67c9f5ea32f79',1,'TEST_CASE(&quot;Action&apos;s &apos;make_accept&apos; factory method constructs an ACCEPT action.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#a0d9534c95f27393dd43a00af3340f45a',1,'TEST_CASE(&quot;Action&apos;s &apos;make_reject&apos; factory method constructs a REJECT action.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#a826532c4952bc6d396e90b211257f564',1,'TEST_CASE(&quot;Action&apos;s &apos;make_continue&apos; factory method constructs a CONTINUE &quot; &quot;action.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#adbf70098540f54f0655351d58191ece7',1,'TEST_CASE(&quot;Action&apos;s &apos;make_default&apos; factory method constructs a DEFAULT action.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#abc468d2e17f1d5ef1683b4102fb3f4f7',1,'TEST_CASE(&quot;Action&apos;s &apos;priority&apos; method sets and gets the priority.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#a510d9290456aabb00c680be6abdd7920',1,'TEST_CASE(&quot;Action&apos;s are comparable.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#acc2e3cdc9f348d420149eac4a4ed2f55',1,'TEST_CASE(&quot;Action&apos;s are copyable.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#a1d18b19d721d849068e18ca51c2d66a4',1,'TEST_CASE(&quot;Action&apos;s are movable.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#a87851cb4a9ba47178c831c4f34671ff8',1,'TEST_CASE(&quot;Action&apos;s are assignable.&quot;, &quot;[Action]&quot;):&#160;test_Action.cpp'],['../test__Action_8cpp.html#a3e70bb4766602e92ea505e662f3525cb',1,'TEST_CASE(&quot;Action&apos;s are printable.&quot;):&#160;test_Action.cpp'],['../test__AddressPool_8cpp.html#a0d8f8ba46adbffb4dcbccdb8674d2811',1,'TEST_CASE(&quot;AddressPool&apos;s can be constructed.&quot;, &quot;[AddressPool]&quot;):&#160;test_AddressPool.cpp'],['../test__AddressPool_8cpp.html#a15376974a7b618d30e5fdd7e80d543dd',1,'TEST_CASE(&quot;AddressPool&apos;s &apos;add&apos; method adds an address to the pool.&quot;, &quot;[AddressPool]&quot;):&#160;test_AddressPool.cpp'],['../test__AddressPool_8cpp.html#af95583386f9fba4f642bba4b36aedf41',1,'TEST_CASE(&quot;AddressPool&apos;s &apos;contains&apos; method determines whether an address is &quot; &quot;in the pool or not.&quot;, &quot;[AddressPool]&quot;):&#160;test_AddressPool.cpp'],['../test__AddressPool_8cpp.html#a513cd8a7681ac50d970229cece050e02',1,'TEST_CASE(&quot;AddressPool removes expired addresses.&quot;, &quot;[AddressPool]&quot;):&#160;test_AddressPool.cpp'],['../test__Call_8cpp.html#a5006a1b3aaf275349e221de043274784',1,'TEST_CASE(&quot;Call&apos;s are constructable.&quot;, &quot;[Call]&quot;):&#160;test_Call.cpp'],['../test__Call_8cpp.html#a1b4556b306e52a97b6a60ee4c7325693',1,'TEST_CASE(&quot;Call&apos;s are comparable.&quot;, &quot;[Call]&quot;):&#160;test_Call.cpp'],['../test__Call_8cpp.html#aa746fcb7b79bd10109f2a152ea978143',1,'TEST_CASE(&quot;Call&apos;s &apos;action&apos; method determines what to do with a &quot; &quot;packet/address combination.&quot;, &quot;[Call]&quot;):&#160;test_Call.cpp'],['../test__Call_8cpp.html#a70494cf01bbc8cf5ca53991802265992',1,'TEST_CASE(&quot;Call&apos;s are printable (without a condition but with a priority).&quot;, &quot;[Call]&quot;):&#160;test_Call.cpp'],['../test__Call_8cpp.html#ab2801b4f690d436def8f046f550b21b7',1,'TEST_CASE(&quot;Call&apos;s are printable (with a condition but without a priority).&quot;, &quot;[Call]&quot;):&#160;test_Call.cpp'],['../test__Call_8cpp.html#ac970b9d8f03d1e511cd9daa9f5f0160f',1,'TEST_CASE(&quot;Call&apos;s &apos;clone&apos; method returns a polymorphic copy.&quot;, &quot;[Call]&quot;):&#160;test_Call.cpp'],['../test__Chain_8cpp.html#a46000267da0b90019fdcde1465764ae0',1,'TEST_CASE(&quot;Chain&apos;s are constructable.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#afd8fe07c0a09fc532f868187d15924d2',1,'TEST_CASE(&quot;Chain&apos;s are comparable.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#ab4569239bdfdb8e33f3bd5227edf7059',1,'TEST_CASE(&quot;Chain&apos;s &apos;append&apos; method appends a new rule to the filter chain.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#abffc9b930e3a061e27d3639399ddbf18',1,'TEST_CASE(&quot;Chain&apos;s &apos;name&apos; method returns the name of the chain.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#ab267317c7b275451e2f870487c73257e',1,'TEST_CASE(&quot;Chain&apos;s are copyable.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#a414a68f18e8bcfed1a346477c5ac3b0f',1,'TEST_CASE(&quot;Chain&apos;s are movable.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#a6d96ea156d3519b0759f85e32bbc0775',1,'TEST_CASE(&quot;Chain&apos;s are assignable.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#a7d102ae6198b735eb8b0878594238dcb',1,'TEST_CASE(&quot;Chain&apos;s &apos;action&apos; method determines what to do with a packet with &quot; &quot; respect to a destination address.&quot;, &quot;[Rule]&quot;):&#160;test_Chain.cpp'],['../test__Chain_8cpp.html#a0ded5d86d470a185c1badddbfb0580ee',1,'TEST_CASE(&quot;Chain&apos;s are printable.&quot;, &quot;[Chain]&quot;):&#160;test_Chain.cpp'],['../test__config__grammar_8cpp.html#a4102344d5c47e5657f8eef093c3584fa',1,'TEST_CASE(&quot;A configuration string must have at least one valid statement &quot; &quot;or block.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a85c8358a63d534f9b609064c7442baff',1,'TEST_CASE(&quot;Global statements.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#af69ba7624f9d12307acaa1289962aae5',1,'TEST_CASE(&quot;Parse global &apos;default_action&apos; statement.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a0112c87315c42cf11195682d0eeb9231',1,'TEST_CASE(&quot;UDP configuration block.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a35d624a26817a075b804cfa6a152614a',1,'TEST_CASE(&quot;UDP port setting.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a99b109e0d4aa11cfd4a7b5178f24cf7a',1,'TEST_CASE(&quot;UDP IP address setting.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a1db6f41b629dfd4a7b2ddfe8e19ece0f',1,'TEST_CASE(&quot;UDP max_bitrate setting.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a2afffd3f34d471b921fe80ec252bc766',1,'TEST_CASE(&quot;Serial port configuration block.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a701352b5b0bd87216718cc3fd92cd236',1,'TEST_CASE(&quot;Serial port device setting.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a539e27567a184d0c6dff63631f834d9c',1,'TEST_CASE(&quot;Serial port baud rate setting.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#aecd88c33b632a6e7ce4c3157bd07be61',1,'TEST_CASE(&quot;Serial port flow control setting.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a61326cb7f697d08e1b7d3e8ab5575e39',1,'TEST_CASE(&quot;Serial address preload.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a25f0ca36991b46b7a02174bf4e1ba982',1,'TEST_CASE(&quot;Chain block.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a2a6516040d3399a955cd57f6600dbf1e',1,'TEST_CASE(&quot;Invalid rule.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a49b1fee4bac5a31c99c6b34854cf06c6',1,'TEST_CASE(&quot;Accept rule.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a04aa8b20e5503de5896990ce386a717e',1,'TEST_CASE(&quot;Reject rule.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#aae673dfa7db3730473dd2706465174be',1,'TEST_CASE(&quot;Call rule.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a589f8421187fe27ce61063c81af6deb0',1,'TEST_CASE(&quot;GoTo rule.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#acb8782fa5cd9a228124537f0120c5e2a',1,'TEST_CASE(&quot;Condition.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#ad2ba1d6759b8a29be62d509ef6676dc3',1,'TEST_CASE(&quot;Packet type condition.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a086ced28660d8615b063a847fd61b3a8',1,'TEST_CASE(&quot;Source condition.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a946ac3888d6cb5c145c9f3b96f0ce01d',1,'TEST_CASE(&quot;Destination condition.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a21908e87ecae6ed881bfe899faa54fd9',1,'TEST_CASE(&quot;Priority.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a2d24e6515639111a800530f717da54c5',1,'TEST_CASE(&quot;Rule combinations with &apos;accept&apos;.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#aaee90222fb0c1445e82d877885202edf',1,'TEST_CASE(&quot;Rule combinations with &apos;reject&apos;.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a33045513ee1d1d5837d88ec7f0de23cc',1,'TEST_CASE(&quot;Rule combinations with &apos;call&apos;.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#a297871fed818f3fc2da1a2dd434f6aa4',1,'TEST_CASE(&quot;Rule combinations with &apos;goto&apos;.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__config__grammar_8cpp.html#afdc0266e876a560e4a3038a8aeae4ba9',1,'TEST_CASE(&quot;&apos;print_node&apos; method prints an abstract syntax tree.&quot;, &quot;[config]&quot;):&#160;test_config_grammar.cpp'],['../test__ConfigParser_8cpp.html#a12dbffe711a23674c3a8f79bbefdc439',1,'TEST_CASE(&quot;&apos;init_chains&apos; initializes a map of chain names to empty chains&quot; &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#a916ab84d2aed8620e37fb66d03c565ad',1,'TEST_CASE(&quot;&apos;parse_action&apos; parses an action from the given AST node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#abd9b4fe987e10922b79f6bafb8e3dee8',1,'TEST_CASE(&quot;&apos;parse_condition&apos; parses a condition from the given AST node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#ad4ad1e9d7523b957cb8a05bda9fb26c2',1,'TEST_CASE(&quot;&apos;parse_chain&apos; parses an action from the given AST node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#a01abf6fc3ea4cdb26dc568ceb77ad29d',1,'TEST_CASE(&quot;&apos;parse_filter&apos; parses the filter from the given AST root node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#a1e7240434cdf83240208b082c0bcbde0',1,'TEST_CASE(&quot;&apos;parse_serial&apos; parses a serial interface from a serial interface &quot; &quot;AST node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#a144c37b7b6db1e9dfcc69a0f832bf95b',1,'TEST_CASE(&quot;&apos;parse_udp&apos; parses a UDP interface from a UDP interface AST node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#ae144128fcb2ef70628aeefe6726d84b8',1,'TEST_CASE(&quot;&apos;parse_interfaces&apos; parses serial port and UDP interfaces from &quot; &quot;the root node.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#a8a568aa404d14bafea69049fa5b95a15',1,'TEST_CASE(&quot;ConfigParser can parse a file.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#a4e1c92623d7cbd4e94cdcf8c67a66b02',1,'TEST_CASE(&quot;ConfigParser are printable.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__ConfigParser_8cpp.html#ae3ccb5398202b0ad42d9ac404c58a2b3',1,'TEST_CASE(&quot;ConfigParser&apos;s &apos;make_app&apos; method returns an application object.&quot;, &quot;[ConfigParser]&quot;):&#160;test_ConfigParser.cpp'],['../test__Connection_8cpp.html#abd4a8073e196619f04a51e44f8bc0ab5',1,'TEST_CASE(&quot;Connection&apos;s can be constructed.&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#a383cc53e2e42853dfa7a0a245fbb8c18',1,'TEST_CASE(&quot;Connection&apos;s are printable&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#acdfd34f6e7a85d7c846677bd4b011f2b',1,'TEST_CASE(&quot;Connection&apos;s &apos;add_address&apos; method adds/updates addresses.&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#a289e9017029d7c577a7a30dc7cfafce7',1,'TEST_CASE(&quot;Connection&apos;s &apos;next_packet&apos; method.&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#a2a7317412d75534167b420da528d3025',1,'TEST_CASE(&quot;Connection&apos;s &apos;send&apos; method ensures the given packet is not &quot; &quot;nullptr.&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#ab0860d21810d5d217ad3f8732017795b',1,'TEST_CASE(&quot;Connection&apos;s &apos;send&apos; method (with destination address).&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#a177882405e3cb978a5cb0f54097f45fb',1,'TEST_CASE(&quot;Connection&apos;s &apos;send&apos; method (without destination address).&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#ac87a7392b1381d7f44159391afe43380',1,'TEST_CASE(&quot;Connection&apos;s &apos;send&apos; method (with broadcast address 0.0).&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#a147c1bdc3b8cefb33c438eff87941c1e',1,'TEST_CASE(&quot;Connection&apos;s &apos;send&apos; method (with component broadcast address x.0).&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__Connection_8cpp.html#a37f0b9ace3d00f6705d1568912837173',1,'TEST_CASE(&quot;Connection&apos;s &apos;send&apos; method (destination address, system reachable, &quot; &quot;component unreachable.&quot;, &quot;[Connection]&quot;):&#160;test_Connection.cpp'],['../test__ConnectionFactory_8cpp.html#a89951550b15bfa26d5e71828a13ce770',1,'TEST_CASE(&quot;ConnectionFactory&apos;s can be constructed.&quot;, &quot;[ConnectionFactory]&quot;):&#160;test_ConnectionFactory.cpp'],['../test__ConnectionFactory_8cpp.html#a4dd96187ab509ef57c82c8ecc8add1c7',1,'TEST_CASE(&quot;ConnectionFactory&apos;s &apos;get&apos; method returns a new connection.&quot;, &quot;[ConnectionFactory]&quot;):&#160;test_ConnectionFactory.cpp'],['../test__ConnectionFactory_8cpp.html#a4d9ba17c5d7f22234449a8c45a489cba',1,'TEST_CASE(&quot;ConnectionFactory&apos;s &apos;wait_for_packet&apos; method waits for a packet &quot; &quot;on any of the connections created by the factory.&quot;, &quot;[ConnectionFactory]&quot;):&#160;test_ConnectionFactory.cpp'],['../test__ConnectionPool_8cpp.html#a7ece2a2115438f4e8155f7fd24d3b197',1,'TEST_CASE(&quot;ConnectionPool&apos;s can be constructed.&quot;, &quot;[ConnectionPool]&quot;):&#160;test_ConnectionPool.cpp'],['../test__ConnectionPool_8cpp.html#a6b5cab9b5c7b8146c39332c7bbe374c5',1,'TEST_CASE(&quot;ConnectionPool&apos;s can store at least one connection and send a &quot; &quot;packet over it.&quot;, &quot;[ConnectionPool]&quot;):&#160;test_ConnectionPool.cpp'],['../test__ConnectionPool_8cpp.html#a1b6e21c11bd43708bd5f4fd6847a6674',1,'TEST_CASE(&quot;ConnectionPool&apos;s can store more than one connection and send a &quot; &quot;packet over them.&quot;, &quot;[ConnectionPool]&quot;):&#160;test_ConnectionPool.cpp'],['../test__ConnectionPool_8cpp.html#a2e61dda676e7ff8df1c6ef66d3c6c7ca',1,'TEST_CASE(&quot;ConnectionPool&apos;s &apos;remove&apos; method removes a connection.&quot;, &quot;[ConnectionPool]&quot;):&#160;test_ConnectionPool.cpp'],['../test__ConnectionPool_8cpp.html#a1e1d300509453122ab930ad6c8fc47a4',1,'TEST_CASE(&quot;ConnectionPool&apos;s &apos;send&apos; method removes connections that have &quot; &quot;expired.&quot;, &quot;[ConnectionPool]&quot;):&#160;test_ConnectionPool.cpp'],['../test__DNSLookupError_8cpp.html#a63b6833836024b7a796ebe807ab80532',1,'TEST_CASE(&quot;DNSLookupError&apos;s can be thrown.&quot;, &quot;[DNSLookupError]&quot;):&#160;test_DNSLookupError.cpp'],['../test__DNSLookupError_8cpp.html#add2a5ffe38d3f6c410b8dd69e1accef0',1,'TEST_CASE(&quot;The &apos;what&apos; method gives the unresolved hostname.&quot;, &quot;[DNSLookupError]&quot;):&#160;test_DNSLookupError.cpp'],['../test__Filesystem_8cpp.html#ace89fac061a3c74319af2ee9b7500122',1,'TEST_CASE(&quot;Filesystem&apos;s &apos;exist&apos; method determines the existence of a file.&quot;, &quot;[Filesystem]&quot;):&#160;test_Filesystem.cpp'],['../test__Filter_8cpp.html#aa93a09dce61c533798843682dff9bca9',1,'TEST_CASE(&quot;Filter&apos;s are constructable.&quot;, &quot;[Filter]&quot;):&#160;test_Filter.cpp'],['../test__Filter_8cpp.html#aa16592cc65ef87d1d9951a5c25dfabf6',1,'TEST_CASE(&quot;Filter&apos;s are comparable.&quot;, &quot;[Filter]&quot;):&#160;test_Filter.cpp'],['../test__Filter_8cpp.html#ad2a34181049a1c63f0ab7dbc63880150',1,'TEST_CASE(&quot;Filter&apos;s are copyable.&quot;, &quot;[Filter]&quot;):&#160;test_Filter.cpp'],['../test__Filter_8cpp.html#a68035ad8b5044388cddaff48dc32df00',1,'TEST_CASE(&quot;Filter&apos;s are movable.&quot;, &quot;[Filter]&quot;):&#160;test_Filter.cpp'],['../test__Filter_8cpp.html#ade389494e61ee9a0ffc3186fba27ab7d',1,'TEST_CASE(&quot;Filter&apos;s are assignable.&quot;, &quot;[Filter]&quot;):&#160;test_Filter.cpp'],['../test__Filter_8cpp.html#a9fb958969a8034c8863cb22879ff6340',1,'TEST_CASE(&quot;Filter&apos;s &apos;will_accept&apos; method determines whether to accept or &quot; &quot;reject a packet/address combination.&quot;, &quot;[Filter]&quot;):&#160;test_Filter.cpp'],['../test__GoTo_8cpp.html#af2716fceae751cfc6bbb1df55aed50a5',1,'TEST_CASE(&quot;GoTo&apos;s are constructable.&quot;, &quot;[GoTo]&quot;):&#160;test_GoTo.cpp'],['../test__GoTo_8cpp.html#a6cebfa382a9d81c953682850617ea3a9',1,'TEST_CASE(&quot;GoTo&apos;s are comparable.&quot;, &quot;[GoTo]&quot;):&#160;test_GoTo.cpp'],['../test__GoTo_8cpp.html#a682aecf3d1bdbfe6aba806a79c3dcd6d',1,'TEST_CASE(&quot;GoTo&apos;s &apos;action&apos; method determines what to do with a &quot; &quot;packet/address combination.&quot;, &quot;[GoTo]&quot;):&#160;test_GoTo.cpp'],['../test__GoTo_8cpp.html#a77b1aa2449458c4c853eaeb1af0a05a6',1,'TEST_CASE(&quot;GoTo&apos;s are printable (without a condition but with a priority).&quot;, &quot;[GoTo]&quot;):&#160;test_GoTo.cpp'],['../test__GoTo_8cpp.html#a77d0b818a1809c8cf586f2fbfcd778ac',1,'TEST_CASE(&quot;GoTo&apos;s are printable (with a condition but without a priority).&quot;, &quot;[GoTo]&quot;):&#160;test_GoTo.cpp'],['../test__GoTo_8cpp.html#ad3543b6b6715328f75a065ccbaa0da39',1,'TEST_CASE(&quot;GoTo&apos;s &apos;clone&apos; method returns a polymorphic copy.&quot;, &quot;[GoTo]&quot;):&#160;test_GoTo.cpp'],['../test__If_8cpp.html#a942ed2801713f53002bb64e88d7d4bd6',1,'TEST_CASE(&quot;If&apos;s are constructable.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#a23ecfdac7ffce4abddfd5e91ea8e373d',1,'TEST_CASE(&quot;If&apos;s are comparable.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#af625de1add8838b94008c263be02bef9',1,'TEST_CASE(&quot;If&apos;s are copyable.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#ab7897b4d1c29b31cdcca30f3137d4ebd',1,'TEST_CASE(&quot;If&apos;s are movable.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#ae961dc2e4757ae93c5127d2fa167a441',1,'TEST_CASE(&quot;If&apos;s are assignable.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#a9998c16fab8205d3b231fbd5764c89b8',1,'TEST_CASE(&quot;If&apos;s &apos;check&apos; method determines if a packet and destination&quot; &quot;address matches the conditional.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#af6c15335ba798d49da5374aecfd14121',1,'TEST_CASE(&quot;If&apos;s &apos;type&apos; method sets the packet ID for matching.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#a0181cb3f241d3fe2f1599f6b4fad36f8',1,'TEST_CASE(&quot;If&apos;s &apos;from&apos; method sets the source subnet to match.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#a762a82136bcec9c204096389501ba32b',1,'TEST_CASE(&quot;If&apos;s &apos;to&apos; method sets the source subnet to match.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__If_8cpp.html#a1976dff017b97d68b2b2912ece0f0495',1,'TEST_CASE(&quot;If&apos;s are printable.&quot;, &quot;[If]&quot;):&#160;test_If.cpp'],['../test__Interface_8cpp.html#a04242246c0d529b7a42dd3e388b5a3e5',1,'TEST_CASE(&quot;Interface&apos;s can be constructed.&quot;, &quot;[Interface]&quot;):&#160;test_Interface.cpp'],['../test__Interface_8cpp.html#a6b19f5807ccc7bef5a5c45d809657bf4',1,'TEST_CASE(&quot;Interface&apos;s &apos;send_packet&apos; method (included just for coverage).&quot; &quot;[Interface]&quot;):&#160;test_Interface.cpp'],['../test__Interface_8cpp.html#a74ca3c1bb7dab4381003984658d0320d',1,'TEST_CASE(&quot;Interface&apos;s &apos;receive_packet&apos; method sends the packet using the &quot; &quot;contained ConnectionPool.&quot;, &quot;[Interface]&quot;):&#160;test_Interface.cpp'],['../test__Interface_8cpp.html#aaa0acc02a262d13fddb41f9c7bdb0a37',1,'TEST_CASE(&quot;Interface&apos;s are printable.&quot;, &quot;[Interface]&quot;):&#160;test_Interface.cpp'],['../test__InterfaceThreader_8cpp.html#a80407b0030002d808c1098736b086e56',1,'TEST_CASE(&quot;InterfaceThreader&apos;s can be constructed.&quot;, &quot;[InterfaceThreader]&quot;):&#160;test_InterfaceThreader.cpp'],['../test__InterfaceThreader_8cpp.html#a91d7e09c363286123ef18ae73c7bff24',1,'TEST_CASE(&quot;InterfaceThreader&apos;s run Interface::send_packet and &quot; &quot;Interface::receive_packet methods of the contained &quot; &quot;Interface repeatedly.&quot;, &quot;[InterfaceThreader]&quot;):&#160;test_InterfaceThreader.cpp'],['../test__IPAddress_8cpp.html#a3399444d5506ccbbefa000889934f0a9',1,'TEST_CASE(&quot;IPAddress&apos;s store an address and a port number.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#aded3f548c720c855a6ecae1be666c53d',1,'TEST_CASE(&quot;IPAddress&apos;s are comparable.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#aa57defd33a029f6a3d7889dd28286ef8',1,'TEST_CASE(&quot;IPAddress&apos;s can be constructed from an address and port.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#a207c9fbe77f9d7fb849cd6fdc5b860ef',1,'TEST_CASE(&quot;IPAddress&apos;s can be constructed from strings.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#a5e23af06e6737d8c1d7323ce5f155d57',1,'TEST_CASE(&quot;IPAddress&apos;s are copyable.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#aab672a2ab6d5fb303e5d51a999a9338e',1,'TEST_CASE(&quot;The port of an IP address can be changed during a copy.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#a21100a889ca84f4668ca9339317b7f57',1,'TEST_CASE(&quot;IPAddress&apos;s are movable.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#aca80a309c2942380e6eebfebd81125ea',1,'TEST_CASE(&quot;IPAddress&apos;s are assignable.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#afd47a477eef90a6a93e6e75ecf66bc20',1,'TEST_CASE(&quot;IPAddress&apos;s are printable&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__IPAddress_8cpp.html#ad883b140a24e658c30108dd79bfc60e6',1,'TEST_CASE(&quot;dnslookup finds IPAddress&apos;s by domain name.&quot;, &quot;[IPAddress]&quot;):&#160;test_IPAddress.cpp'],['../test__Logger_8cpp.html#a79755b8d39bec866b962a5ef43957aa1',1,'TEST_CASE(&quot;The Logger level can be set and retrieved with the static &apos;level&apos; &quot; &quot;method&quot;, &quot;[Logger]&quot;):&#160;test_Logger.cpp'],['../test__Logger_8cpp.html#a007e3b7bda0edc75aefffedfc069278f',1,'TEST_CASE(&quot;The Logger can log to stdout with the static &apos;log&apos; method if the &quot; &quot; logger&apos;s level is the same or higher than the loglevel of the &quot; &quot;message.&quot;, &quot;[Logger]&quot;):&#160;test_Logger.cpp'],['../test__Logger_8cpp.html#a8503a1f256ad242e083e7031aef9b2fd',1,'TEST_CASE(&quot;All logged messages have a timestamp (this can sometimes fail if &quot; &quot;the clock ticks over a second during the test).&quot;, &quot;[Logger]&quot;):&#160;test_Logger.cpp'],['../test__MAVAddress_8cpp.html#a5fc04f53a0b45a207cac9956165ee20c',1,'TEST_CASE(&quot;MAVAddress&apos;s store a system and component ID.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#aedccf2dd50089af4e8c25017fd57b5d2',1,'TEST_CASE(&quot;MAVAddress&apos;s are comparable.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#a1a2f9e4ba8bd96c6f58c3a112973fd15',1,'TEST_CASE(&quot;MAVAddress&apos;s can be constructed from a numeric address.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#ac43cadeb1ff75e45a35ca824ea69c2b8',1,'TEST_CASE(&quot;MAVAddress&apos;s can be constructed from System and Component ID&apos;s.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#a13892996e09eceec6d0a75b67e234396',1,'TEST_CASE(&quot;MAVAddress&apos;s can be constructed from strings.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#a330dd399a5c2c251874f8701ebf2f562',1,'TEST_CASE(&quot;MAVAddress&apos;s are copyable.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#a9138462d48e1a509accfd8cc0ff4ff97',1,'TEST_CASE(&quot;MAVAddress&apos;s are movable.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#ae46f360a67b615f24c11c3a842a2ac2b',1,'TEST_CASE(&quot;MAVAddress&apos;s are assignable.&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__MAVAddress_8cpp.html#a75ba71c048bd7007bab18b29239d3e6b',1,'TEST_CASE(&quot;MAVAddress&apos;s are printable&quot;, &quot;[MAVAddress]&quot;):&#160;test_MAVAddress.cpp'],['../test__mavlink_8cpp.html#ae921e31bea775178d439011891c0c171',1,'TEST_CASE(&quot;&apos;message_info&apos; returns the message info structure.&quot;, &quot;[mavlink]&quot;):&#160;test_mavlink.cpp'],['../test__MAVSubnet_8cpp.html#a953354c22363974c56851287d4398f7c',1,'TEST_CASE(&quot;MAVSubnet&apos;s are comparable.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#a5797d49eb5903036d99ea9cee6386da9',1,'TEST_CASE(&quot;MAVSubnet&apos;s can be constructed from a MAVLink address &quot; &quot;and a numeric mask.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#a240bf48875e36186f300c3eaeeda567a',1,'TEST_CASE(&quot;MAVSubnet&apos;s can be constructed from a MAVLink address, &quot; &quot;system mask, and component mask.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#af547a0e4521d79ec152c1254960dda81',1,'TEST_CASE(&quot;MAVSubnet&apos;s can be constructed from strings.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#acb549643a35dc6c6b144c8dfe3936458',1,'TEST_CASE(&quot;MAVSubnet&apos;s are copyable.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#aede5f446854507ef75da439589621386',1,'TEST_CASE(&quot;MAVSubnet&apos;s are movable.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#a9b4c4199a2d62a4cea916388e41e28f0',1,'TEST_CASE(&quot;MAVSubnet&apos;s are assignable.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#a5ec39b2266e2dd9113162e1f73537f00',1,'TEST_CASE(&quot;MAVSubnet&apos;s are printable.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__MAVSubnet_8cpp.html#af8054106fa8b334eadb8fc1322a462fa',1,'TEST_CASE(&quot;The &apos;contains&apos; method determines if a MAVLink address &quot; &quot;is in the subnet.&quot;, &quot;[MAVSubnet]&quot;):&#160;test_MAVSubnet.cpp'],['../test__Options_8cpp.html#a1f3eed8bf59fe823845532fc44895521',1,'TEST_CASE(&quot;&apos;find_config&apos; returns the path to the highest priority &quot; &quot;configuration file.&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Options_8cpp.html#ad30e3ed7062bbcf1ee19d58a6ee49610',1,'TEST_CASE(&quot;Options&apos;s class prints the help message.&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Options_8cpp.html#a42722ef65c22d7565f9f5b749754c30e',1,'TEST_CASE(&quot;Options&apos;s class prints version information when given the &quot; &quot;&apos;--version&apos; flag.&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Options_8cpp.html#a54206bb952761e7306d1d9f636be1f36',1,'TEST_CASE(&quot;Options&apos;s class will use the given configuration file &quot; &quot;(--config flag).&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Options_8cpp.html#a642483a639d51a784c81221f059f42b0',1,'TEST_CASE(&quot;Options&apos;s class finds the configuration file.&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Options_8cpp.html#af5e47c79a3584d95b0c4ea1839730a85',1,'TEST_CASE(&quot;Options&apos;s class sets run to false and ast to true when the --ast &quot; &quot;flag is given.&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Options_8cpp.html#aeb70778b9c3c247e239eaba861b027a6',1,'TEST_CASE(&quot;Option&apos;s class has a loglevel option&quot;, &quot;[Options]&quot;):&#160;test_Options.cpp'],['../test__Packet_8cpp.html#a86b62d40f0195b57a8b2897470fb2da6',1,'TEST_CASE(&quot;Packet&apos;s can be constructed.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a3aa61c1f65e23dab11143081be7bbb8d',1,'TEST_CASE(&quot;Packet&apos;s are comparable.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#adc438e6572e1065bdca49f291f4dfcf0',1,'TEST_CASE(&quot;Packet&apos;s are copyable.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#ae6749bb1044bf44af1e7651d34216064',1,'TEST_CASE(&quot;Packet&apos;s are movable.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a73895d647134aadcf8bfaed76f2899e2',1,'TEST_CASE(&quot;Packet&apos;s are assignable.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a3adb0916e1b7547b0b26d0e26a00cb2c',1,'TEST_CASE(&quot;Packet&apos;s contain raw packet data and make it accessible.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a88a21788248f63f6e73c8205885f63b0',1,'TEST_CASE(&quot;Packet&apos;s have a version.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a9d277011823898978526bb897d787c70',1,'TEST_CASE(&quot;Packet&apos;s have an ID.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a63c4037161aed1e1a3c5d8a1d4487c59',1,'TEST_CASE(&quot;Packet&apos;s have a name.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a62491066c8dd6268cf4420689fb20915',1,'TEST_CASE(&quot;Packet&apos;s have a source address.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a1b5210993b611470c93049da01c11f3c',1,'TEST_CASE(&quot;Packet&apos;s optionally have a destination address.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#a530a2d342bff694fecf157e1a4cbf6a2',1,'TEST_CASE(&quot;Packet&apos;s optionally have a source connection.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__Packet_8cpp.html#ae6d0ff457ea5cde05bceaaceb8594454',1,'TEST_CASE(&quot;Packet&apos;s are printable.&quot;, &quot;[Packet]&quot;):&#160;test_Packet.cpp'],['../test__PacketParser_8cpp.html#a3bdb2ecc59f232e70e4079dc95fef20a',1,'TEST_CASE(&quot;PacketParser&apos;s can be constructed.&quot;, &quot;[PacketParser]&quot;):&#160;test_PacketParser.cpp'],['../test__PacketParser_8cpp.html#a05f2d72c5d98b2b7b1e64ed5a9637a4b',1,'TEST_CASE(&quot;PacketParser&apos;s can parse packets with &apos;parse_byte&apos;.&quot;, &quot;[PacketParser]&quot;):&#160;test_PacketParser.cpp'],['../test__PacketParser_8cpp.html#adc72c2548bed18a4eeff6f4b7af2a6f8',1,'TEST_CASE(&quot;PacketParser&apos;s can be cleared with &apos;clear&apos;.&quot;, &quot;[PacketParser]&quot;):&#160;test_PacketParser.cpp'],['../test__PacketParser_8cpp.html#a5dca5595d9c06df0ae4a53fce690c66d',1,'TEST_CASE(&quot;PacketParser&apos;s keep track of how many bytes they have parsed of &quot; &quot;the current packet.&quot;, &quot;[PacketParser]&quot;):&#160;test_PacketParser.cpp'],['../test__PacketQueue_8cpp.html#a7d597721c2b224bcb9ccf870d14ef690',1,'TEST_CASE(&quot;PacketQueue&apos;s can be constructed.&quot;, &quot;[AddressPool]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketQueue_8cpp.html#ad084eb434ce60fd2bc6a5abce6e83af2',1,'TEST_CASE(&quot;PacketQueue&apos;s &apos;push&apos; adds a packet to the queue.&quot;, &quot;[PacketQueue]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketQueue_8cpp.html#aa2f058067d043cc1c9e1ba9a8007eca3',1,'TEST_CASE(&quot;PacketQueue&apos;s &apos;empty&apos; method determines if the queue is empty or &quot; &quot;not.&quot;, &quot;[PacketQueue]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketQueue_8cpp.html#a5e7ef3fcb390cc2cba414de1736991df',1,'TEST_CASE(&quot;PacketQueue&apos;s can be managed with &apos;push&apos; and &apos;pop&apos; methods.&quot;, &quot;[PacketQueue]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketQueue_8cpp.html#a71ce73babe84a740192654f5e13432da',1,'TEST_CASE(&quot;PacketQueue&apos;s &apos;pop&apos; method blocks by default.&quot;, &quot;[PacketQueue]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketQueue_8cpp.html#a4cf65bdea0d743b14aaf25153f75de81',1,'TEST_CASE(&quot;PacketQueue&apos;s &apos;pop&apos; method optionally has a timeout.&quot;, &quot;[PacketQueue]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketQueue_8cpp.html#a851abff7422a688bcfa2f315a57d2975',1,'TEST_CASE(&quot;PacketQueue&apos;s &apos;pop&apos; method is non blocking when given a 0 second &quot; &quot;timeout.&quot;, &quot;[PacketQueue]&quot;):&#160;test_PacketQueue.cpp'],['../test__PacketVersion1_8cpp.html#a20c422a5347d9f66cd2fe15aa07aa2e5',1,'TEST_CASE(&quot;&apos;packet_v1::header_complete&apos; determines whether the given bytes &quot; &quot;at least represent a complete header.&quot;, &quot;[packet_v1]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#aead85b03818c3f449860e861d5ad6834',1,'TEST_CASE(&quot;&apos;packet_v1::header&apos; returns a structure pointer to the given &quot; &quot;header data.&quot;, &quot;[packet_v1]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a6e681309fd64e683ddc6756075dcfeb5',1,'TEST_CASE(&quot;&apos;packet_v1::packet_complete&apos; determines whether the given bytes &quot; &quot;represent a complete packet.&quot;, &quot;[packet_v1]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a46e2b27adfb860086bb036ea10ce8f84',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s can be constructed.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a0b1a54f4b663155139c5fee85886d0f6',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s are comparable.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a28b56789ce23e3da2082c05fbbb16066',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s are copyable.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#af8830ca13911ef433304501ca70e946a',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s are movable.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a2218c578b6ffd42dd3b004b76c5c7158',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s are assignable.&quot;, &quot;[Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#add1939d3911b5433f2bc90b2cda8ee09',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s contain raw packet data and make it accessible.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a9019d7397e33c90588fa31fef57f6d64',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s have a version.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#adb6db39575ee02750771f0178d97f66f',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s have an ID.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a03f71fd4bdd48b97b370548d473da187',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s have a name.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#aef02d5dad7b1848381aebc43b2442749',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s have a source address.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#adeae10f4b180a006c0aa7e6704b8b374',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s optionally have a destination address.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a0e8af52b6621b6f0ce01030569335fd3',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s optionally have a source connection.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion1_8cpp.html#a4aecbd46bf7e5464ac747ff022af05e5',1,'TEST_CASE(&quot;packet_v1::Packet&apos;s are printable.&quot;, &quot;[packet_v1::Packet]&quot;):&#160;test_PacketVersion1.cpp'],['../test__PacketVersion2_8cpp.html#aeaaac91f7e74aa88b0096f5618d5ae67',1,'TEST_CASE(&quot;&apos;packet_v2::header_complete&apos; determines whether the given bytes &quot; &quot;at least represent a complete header.&quot;, &quot;[packet_v2]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a148ec554bb6cf29561d919754afc6222',1,'TEST_CASE(&quot;&apos;packet_v2::header&apos; returns a structure pointer to the given &quot; &quot;header data.&quot;, &quot;[packet_v2]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a969780364ed57489106fd8bcaee4673f',1,'TEST_CASE(&quot;&apos;packet_v2::packet_complete&apos; determines whether the given bytes &quot; &quot;represent a complete packet.&quot;, &quot;[packet_v2]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a32cf20ea8d4acc316c9ffdc19ac94325',1,'TEST_CASE(&quot;&apos;packet_v2::is_signed&apos; determines whether the given bytes &quot; &quot;represent a signed packet.&quot;, &quot;[packet_v2]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a44d960ac521fecb818d0cadf3bba414f',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s can be constructed.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#ab0b9e36c6fa9a8f61062a6eef0ddbb62',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s are comparable.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#af5b76716d03c01d8aaf5fb208a856ceb',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s are copyable.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#ac73d3945fe6b630720ff0bd2181bfc84',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s are movable.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a0f9c06db152f19111e15c307ab7c0628',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s are assignable.&quot;, &quot;[Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a2383887918aa54eae796775a72e2f6ee',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s contain raw packet data and make it accessible.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#ac64b1ce978cd92e6390d902ad1acd030',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s have a version.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#afbd6f30833613b14ff87c850e5907e45',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s have an ID.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a108cf3221cc7d6ddd47919c910e20d7d',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s have a name.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a18c5234351856cbca920cf4f968c66a0',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s have a source address.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#aef45134204642172407e99c0fc97ad27',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s optionally have a destination address.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#af5ed060b2bb523775a342d8097d6a15d',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s optionally have a source connection.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PacketVersion2_8cpp.html#a42fae4f0694febcedcaced4c439dddc3',1,'TEST_CASE(&quot;packet_v2::Packet&apos;s are printable.&quot;, &quot;[packet_v2::Packet]&quot;):&#160;test_PacketVersion2.cpp'],['../test__PartialSendError_8cpp.html#a6a4378ae30a135a193eb3b2ce7f3080c',1,'TEST_CASE(&quot;PartialSendError&apos;s can be thrown.&quot;, &quot;[PartialSendError]&quot;):&#160;test_PartialSendError.cpp'],['../test__PartialSendError_8cpp.html#adc3efcff390b294995bb4b40be8fe7a8',1,'TEST_CASE(&quot;PartialSendError&apos;s have a message.&quot;, &quot;[PartialSendError]&quot;):&#160;test_PartialSendError.cpp'],['../test__QueuedPacket_8cpp.html#afcc7462fef967088485dd184909ebc40',1,'TEST_CASE(&quot;QueuedPacket&apos;s can be constructed.&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#a22842835e066b1e6ae28545cd4d7a4c9',1,'TEST_CASE(&quot;QueuedPacket&apos; are comparable.&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#a8c4c1c2f96e815173a99a32ee2f0acca',1,'TEST_CASE(&quot;QueuedPacket&apos;s are copyable.&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#ac63688e77cb8f2b9ecb9a491070bf6a6',1,'TEST_CASE(&quot;QueuedPacket&apos;s are movable.&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#a3772a6a063f360d036c0c6ecb36c889d',1,'TEST_CASE(&quot;QueuedPacket&apos;s are assignable.&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#a60c5b0067e7efddefe786ec3b6536de9',1,'TEST_CASE(&quot;QueuedPacket&apos;s are assignable (by move semantics).&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#ac083afb544ed36409a117deadd650661',1,'TEST_CASE(&quot;QueuedPacket&apos;s &apos;packet&apos; method returns the contained MAVLink packet&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__QueuedPacket_8cpp.html#a78f12d641b77fe6a4720d4b7f86bb8dd',1,'TEST_CASE(&quot;QueuedPacket&apos;s are printable.&quot;, &quot;[QueuedPacket]&quot;):&#160;test_QueuedPacket.cpp'],['../test__RecursionError_8cpp.html#acbbe9686d6c7f623fe6d675c284651d7',1,'TEST_CASE(&quot;RecursionError&apos;s can be thrown.&quot;, &quot;[RecursionError]&quot;):&#160;test_RecursionError.cpp'],['../test__RecursionError_8cpp.html#a638886e4422d9c628170625ca14f55ce',1,'TEST_CASE(&quot;RecursionError&apos;s have a message.&quot;, &quot;[RecursionError]&quot;):&#160;test_RecursionError.cpp'],['../test__RecursionGuard_8cpp.html#a79d7b063a6dff0f021497de94298b95a',1,'TEST_CASE(&quot;RecursionGuard&apos;s are constructable.&quot;, &quot;[RecursionGuard]&quot;):&#160;test_RecursionGuard.cpp'],['../test__RecursionGuard_8cpp.html#abfa0f6849088dd40971a675b44df7008',1,'TEST_CASE(&quot;RecusionGuard&apos;s prevent recursion within a single thread.&quot;, &quot;[RecursionGuard]&quot;):&#160;test_RecursionGuard.cpp'],['../test__Reject_8cpp.html#a0506ad85f4717181defa11e4cd0791d0',1,'TEST_CASE(&quot;Reject&apos;s are constructable.&quot;, &quot;[Reject]&quot;):&#160;test_Reject.cpp'],['../test__Reject_8cpp.html#a86874d7cc3ce394838f21b17e58fb6fd',1,'TEST_CASE(&quot;Reject&apos;s are comparable.&quot;, &quot;[Reject]&quot;):&#160;test_Reject.cpp'],['../test__Reject_8cpp.html#a0c6937e565bfab1f548e82cf9ef87789',1,'TEST_CASE(&quot;Reject&apos;s &apos;action&apos; method determines what to do with a &quot; &quot;packet/address combination.&quot;, &quot;[Reject]&quot;):&#160;test_Reject.cpp'],['../test__Reject_8cpp.html#ad19453b7b5c6aa1a40cfb5c797cb01c1',1,'TEST_CASE(&quot;Reject&apos;s &apos;clone&apos; method returns a polymorphic copy.&quot;, &quot;[Reject]&quot;):&#160;test_Reject.cpp'],['../test__Rule_8cpp.html#a6337751b685629faf54096a847fbb7e2',1,'TEST_CASE(&quot;Rule&apos;s can be constructed.&quot;, &quot;[Rule]&quot;):&#160;test_Rule.cpp'],['../test__Rule_8cpp.html#a891caeaddac8448402e54ebd322bc9c2',1,'TEST_CASE(&quot;Rule&apos;s are comparable.&quot;, &quot;[Rule]&quot;):&#160;test_Rule.cpp'],['../test__Rule_8cpp.html#a000c0d3d63440f16e4992510e61a2120',1,'TEST_CASE(&quot;Rule&apos;s &apos;action&apos; method determines what to do with a packet with &quot; &quot;respect to a destination address.&quot;, &quot;[Rule]&quot;):&#160;test_Rule.cpp'],['../test__Rule_8cpp.html#a3e23b23864544984d4e44eae37970677',1,'TEST_CASE(&quot;Rule&apos;s are printable.&quot;, &quot;[Rule]&quot;):&#160;test_Rule.cpp'],['../test__Rule_8cpp.html#a4155f84f8666ef0f951fe5092ebd1465',1,'TEST_CASE(&quot;Rule&apos;s &apos;clone&apos; method returns a polymorphic copy.&quot;, &quot;[Rule]&quot;):&#160;test_Rule.cpp'],['../test__Rule__comparison_8cpp.html#a16423854413babc1368103b1b03e2dc3',1,'TEST_CASE(&quot;Rule&apos;s are polymorphically comparable.&quot;, &quot;[Rule]&quot;):&#160;test_Rule_comparison.cpp'],['../test__semaphore_8cpp.html#a19b539d94d424146bba5bec65c940128',1,'TEST_CASE(&quot;semaphore&apos;s can be constructed.&quot;, &quot;[semaphore]&quot;):&#160;test_semaphore.cpp'],['../test__semaphore_8cpp.html#ac49b3ae8db75ba0798081d03c01d3739',1,'TEST_CASE(&quot;semaphore&apos;s &apos;wait&apos; method waits until the semaphore can be &quot; &quot;decremented.&quot;, &quot;[semaphore]&quot;):&#160;test_semaphore.cpp'],['../test__semaphore_8cpp.html#a2fb61ae9af4e7bd44dd026deedb9e053',1,'TEST_CASE(&quot;semaphore&apos;s &apos;wait_for&apos; method waits until the semaphore can be &quot; &quot;decremented, or the timeout is reached (returning false if it &quot; &quot;timed out).&quot;, &quot;[semaphore]&quot;):&#160;test_semaphore.cpp'],['../test__semaphore_8cpp.html#a50b79f65f43493c438ca6e4b0c63c885',1,'TEST_CASE(&quot;semaphore&apos;s &apos;wait_until&apos; method waits until the semaphore can be &quot; &quot;decremented, or the timeout timepoint is reached (returning false &quot; &quot;if it timed out).&quot;, &quot;[semaphore]&quot;):&#160;test_semaphore.cpp'],['../test__SerialInterface_8cpp.html#a6bb508dd43f4ba6426224732456b6ddc',1,'TEST_CASE(&quot;SerialInterface&apos;s can be constructed.&quot;, &quot;[SerialInterface]&quot;):&#160;test_SerialInterface.cpp'],['../test__SerialInterface_8cpp.html#a606e6dee56cec494490bacfb0103107c',1,'TEST_CASE(&quot;SerialInterface&apos;s &apos;receive_packet&apos; method.&quot;, &quot;[SerialInterface]&quot;):&#160;test_SerialInterface.cpp'],['../test__SerialInterface_8cpp.html#ab0f8517b550658ca6a63a2109dd4b17a',1,'TEST_CASE(&quot;SerialInterface&apos;s &apos;send_packet&apos; method.&quot;, &quot;[SerialInterface]&quot;):&#160;test_SerialInterface.cpp'],['../test__SerialInterface_8cpp.html#ae7f24d5db40500709451136138179327',1,'TEST_CASE(&quot;SerialInterface&apos;s are printable.&quot;, &quot;[SerialInterface]&quot;):&#160;test_SerialInterface.cpp'],['../test__SerialPort_8cpp.html#a32f505502d0f70ce9411619c1f83bb08',1,'TEST_CASE(&quot;SerialPort&apos;s &apos;read&apos; method takes a timeout and returns a vector &quot; &quot;of bytes.&quot;, &quot;[SerialPort]&quot;):&#160;test_SerialPort.cpp'],['../test__SerialPort_8cpp.html#af34d4ab4314ba05dfdcb2bb1243435ea',1,'TEST_CASE(&quot;SerialPort&apos;s &apos;read&apos; method takes a back inserter and a timeout &quot; &quot;writes the received bytes to the back inserter.&quot;, &quot;[SerialPort]&quot;):&#160;test_SerialPort.cpp'],['../test__SerialPort_8cpp.html#ab5d364ae49734d0875292dfd596eb043',1,'TEST_CASE(&quot;SerialPort&apos;s &apos;write&apos; method accepts a vector of bytes.&quot;, &quot;[SerialPort]&quot;):&#160;test_SerialPort.cpp'],['../test__SerialPort_8cpp.html#a50ce506ff2548619bf29f9cfeac99b84',1,'TEST_CASE(&quot;SerialPort&apos;s &apos;write&apos; method accepts two vector iterators&quot;, &quot;[UDPSocket]&quot;):&#160;test_SerialPort.cpp'],['../test__SerialPort_8cpp.html#a0008d49aa27746a400ee1fece8c8d915',1,'TEST_CASE(&quot;SerialPort&apos;s are printable.&quot;, &quot;SerialPort&quot;):&#160;test_SerialPort.cpp'],['../test__UDPInterface_8cpp.html#a0f8cdfe57571211ac7e2131089f0eb22',1,'TEST_CASE(&quot;UDPInterface&apos;s can be constructed.&quot;, &quot;[UPDInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPInterface_8cpp.html#a1cc5c7de2d1b67e15f239c76e8513107',1,'TEST_CASE(&quot;UDPInterace&apos;s &apos;receive_packet&apos; method.&quot;, &quot;[UPDInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPInterface_8cpp.html#aa6207f9e686743262c50e11e0dfe078b',1,'TEST_CASE(&quot;UDPInterace&apos;s &apos;send_packet&apos; method.&quot;, &quot;[UPDInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPInterface_8cpp.html#a662428f738832c71a243d109cd5941e4',1,'TEST_CASE(&quot;UDPInterface&apos;s are printable.&quot;, &quot;[UDPInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPInterface_8cpp.html#a397c3885f5175af822511405b669c4f2',1,'TEST_CASE(&quot;OLD TEST: UDPInterface&apos;s tests.&quot;, &quot;[UPDInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPInterface_8cpp.html#a15c4d8d9b8593063ad324b98814035e1',1,'TEST_CASE(&quot;OLD TEST: UDPInterface&apos;s &apos;receive_packet&apos; method receives one or &quot; &quot;more MAVLink packets.&quot;, &quot;[UPDInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPInterface_8cpp.html#a43619bedca190c353eaf1ccd2532d7e2',1,'TEST_CASE(&quot;OLD TEST: UDPInterface&apos;s &apos;send_packet&apos; method sends one or more &quot; &quot; MAVLink packets.&quot;, &quot;[UPDInterface]&quot;):&#160;test_UDPInterface.cpp'],['../test__UDPSocket_8cpp.html#a309b67da0ef3d7ccefc19ffaefebd2db',1,'TEST_CASE(&quot;UDPSocket&apos;s &apos;send&apos; method accepts a vector of bytes and an address.&quot;, &quot;[UDPSocket]&quot;):&#160;test_UDPSocket.cpp'],['../test__UDPSocket_8cpp.html#a1ecd40bad852e4e5aa4ce4cb054e4369',1,'TEST_CASE(&quot;UDPSocket&apos;s &apos;send&apos; method accepts two vector iterators and an &quot; &quot;address.&quot;, &quot;[UDPSocket]&quot;):&#160;test_UDPSocket.cpp'],['../test__UDPSocket_8cpp.html#acf15b35dc32f8b84c1441331c33d56ae',1,'TEST_CASE(&quot;UDPSocket&apos;s &apos;receive&apos; method takes a timeout and returns a vector &quot; &quot;of bytes and the IP address that sent them.&quot;, &quot;[UDPSocket]&quot;):&#160;test_UDPSocket.cpp'],['../test__UDPSocket_8cpp.html#a252f5dc4712340c43c8a5763d5e90a1f',1,'TEST_CASE(&quot;UDPSocket&apos;s &apos;receive&apos; method takes a back inserter and a timeout &quot; &quot;and returns the IP address that sent the bytes written to the &quot; &quot;back inserter.&quot;, &quot;[UDPSocket]&quot;):&#160;test_UDPSocket.cpp'],['../test__UDPSocket_8cpp.html#aa8699dd938c6e8da4eefa21bb051d155',1,'TEST_CASE(&quot;UDPSocket&apos;s are printable.&quot;, &quot;UDPSocket&quot;):&#160;test_UDPSocket.cpp'],['../test__UnixSerialPort_8cpp.html#acee4cd8607f4cf42468742d83aee6572',1,'TEST_CASE(&quot;UnixSerialPort&apos;s open and configure a serial port on construction&quot; &quot;and closes the port on destruction.&quot;, &quot;[UnixSerialPort]&quot;):&#160;test_UnixSerialPort.cpp'],['../test__UnixSerialPort_8cpp.html#a4bd86d059b02a6c336d49761e2c6c8c1',1,'TEST_CASE(&quot;UnixSerialPort&apos;s open method configures the baud rate.&quot;, &quot;[UnixSerialPort]&quot;):&#160;test_UnixSerialPort.cpp'],['../test__UnixSerialPort_8cpp.html#a6699fb614ad5db844dfd6734ed1eab06',1,'TEST_CASE(&quot;UnixSerialPort&apos;s &apos;read&apos; method receives data on the socket.&quot;, &quot;[UnixSerialPort]&quot;):&#160;test_UnixSerialPort.cpp'],['../test__UnixSerialPort_8cpp.html#a1e69e8f8bd2dd51068b2560e57cbd6db',1,'TEST_CASE(&quot;UnixSerialPort&apos;s &apos;write&apos; method sends data over the serial port.&quot;, &quot;[UnixSerialPort]&quot;):&#160;test_UnixSerialPort.cpp'],['../test__UnixSerialPort_8cpp.html#a785e4c5195dc89eae2ceaa563665ab56',1,'TEST_CASE(&quot;UnixSerialPort&apos;s are printable.&quot;, &quot;[UnixSerialPort]&quot;):&#160;test_UnixSerialPort.cpp'],['../test__UnixUDPSocket_8cpp.html#a1fe09aac319bc0b061e9d95ad98adb39',1,'TEST_CASE(&quot;UnixUDPSocket&apos;s create and bind a UDP socket on construction and &quot; &quot;closes the socket on destruction.&quot;, &quot;[UnixUDPSocket]&quot;):&#160;test_UnixUDPSocket.cpp'],['../test__UnixUDPSocket_8cpp.html#af4e92239fd35877c1e98e9f228986530',1,'TEST_CASE(&quot;UnixUDPSocket&apos;s &apos;send&apos; method sends data on the socket.&quot;, &quot;[UnixUDPSocket]&quot;):&#160;test_UnixUDPSocket.cpp'],['../test__UnixUDPSocket_8cpp.html#a2f5908b26a936b9eb6fb1d8891775cdb',1,'TEST_CASE(&quot;UnixUDPSocket&apos;s &apos;receive&apos; method receives data on the socket.&quot;, &quot;[UnixUDPSocket]&quot;):&#160;test_UnixUDPSocket.cpp'],['../test__UnixUDPSocket_8cpp.html#acdef4b76a4eb7b81c97fcbae98d44561',1,'TEST_CASE(&quot;UnixUDPSocket&apos;s are printable.&quot;, &quot;[UnixUDPSocket]&quot;):&#160;test_UnixUDPSocket.cpp'],['../test__utility_8cpp.html#af933ae2d7a99e73224150cc68cb8e026',1,'TEST_CASE(&quot;&apos;append&apos; appends one vector to another.&quot;, &quot;[utility]&quot;):&#160;test_utility.cpp'],['../test__utility_8cpp.html#ada8fa01704d0479e2d070d3a52399ac3',1,'TEST_CASE(&quot;&apos;append&apos; (with move semantics) appends one vector to another.&quot;, &quot;[utility]&quot;):&#160;test_utility.cpp'],['../test__utility_8cpp.html#a5890c86426729fbbf305739253b48129',1,'TEST_CASE(&quot;&apos;to_bytes&apos; converts numeric types to bytes.&quot;, &quot;[utility]&quot;):&#160;test_utility.cpp'],['../test__utility_8cpp.html#aaadb633022a928f0e19dd73538905170',1,'TEST_CASE(&quot;&apos;to_lower&apos; converts string to lower case.&quot;, &quot;[utility]&quot;):&#160;test_utility.cpp'],['../test__utility_8cpp.html#a3f15d891ef093bafeb52bdf0bdb3d721',1,'TEST_CASE(&quot;&apos;str&apos; converts printable types to strings.&quot;, &quot;[utility]&quot;):&#160;test_utility.cpp'],['../test__utility_8cpp.html#a45a6ef313e4efca27da3a16af89527be',1,'TEST_CASE(&quot;&apos;operator&lt;&lt;&apos; makes vectors printable&quot;, &quot;[utility]&quot;):&#160;test_utility.cpp']]],
  ['test_5fchain_2ecpp',['test_Chain.cpp',['../test__Chain_8cpp.html',1,'']]],
  ['test_5fconfig_5fgrammar_2ecpp',['test_config_grammar.cpp',['../test__config__grammar_8cpp.html',1,'']]],
  ['test_5fconfigparser_2ecpp',['test_ConfigParser.cpp',['../test__ConfigParser_8cpp.html',1,'']]],
  ['test_5fconnection_2ecpp',['test_Connection.cpp',['../test__Connection_8cpp.html',1,'']]],
  ['test_5fconnectionfactory_2ecpp',['test_ConnectionFactory.cpp',['../test__ConnectionFactory_8cpp.html',1,'']]],
  ['test_5fconnectionpool_2ecpp',['test_ConnectionPool.cpp',['../test__ConnectionPool_8cpp.html',1,'']]],
  ['test_5fdnslookuperror_2ecpp',['test_DNSLookupError.cpp',['../test__DNSLookupError_8cpp.html',1,'']]],
  ['test_5ffilesystem_2ecpp',['test_Filesystem.cpp',['../test__Filesystem_8cpp.html',1,'']]],
  ['test_5ffilter_2ecpp',['test_Filter.cpp',['../test__Filter_8cpp.html',1,'']]],
  ['test_5fgoto_2ecpp',['test_GoTo.cpp',['../test__GoTo_8cpp.html',1,'']]],
  ['test_5fif_2ecpp',['test_If.cpp',['../test__If_8cpp.html',1,'']]],
  ['test_5finterface_2ecpp',['test_Interface.cpp',['../test__Interface_8cpp.html',1,'']]],
  ['test_5finterfacethreader_2ecpp',['test_InterfaceThreader.cpp',['../test__InterfaceThreader_8cpp.html',1,'']]],
  ['test_5fipaddress_2ecpp',['test_IPAddress.cpp',['../test__IPAddress_8cpp.html',1,'']]],
  ['test_5flogger_2ecpp',['test_Logger.cpp',['../test__Logger_8cpp.html',1,'']]],
  ['test_5fmavaddress_2ecpp',['test_MAVAddress.cpp',['../test__MAVAddress_8cpp.html',1,'']]],
  ['test_5fmavlink_2ecpp',['test_mavlink.cpp',['../test__mavlink_8cpp.html',1,'']]],
  ['test_5fmavsubnet_2ecpp',['test_MAVSubnet.cpp',['../test__MAVSubnet_8cpp.html',1,'']]],
  ['test_5foptions_2ecpp',['test_Options.cpp',['../test__Options_8cpp.html',1,'']]],
  ['test_5fpacket_2ecpp',['test_Packet.cpp',['../test__Packet_8cpp.html',1,'']]],
  ['test_5fpacketparser_2ecpp',['test_PacketParser.cpp',['../test__PacketParser_8cpp.html',1,'']]],
  ['test_5fpacketqueue_2ecpp',['test_PacketQueue.cpp',['../test__PacketQueue_8cpp.html',1,'']]],
  ['test_5fpacketversion1_2ecpp',['test_PacketVersion1.cpp',['../test__PacketVersion1_8cpp.html',1,'']]],
  ['test_5fpacketversion2_2ecpp',['test_PacketVersion2.cpp',['../test__PacketVersion2_8cpp.html',1,'']]],
  ['test_5fpartialsenderror_2ecpp',['test_PartialSendError.cpp',['../test__PartialSendError_8cpp.html',1,'']]],
  ['test_5fqueuedpacket_2ecpp',['test_QueuedPacket.cpp',['../test__QueuedPacket_8cpp.html',1,'']]],
  ['test_5frecursionerror_2ecpp',['test_RecursionError.cpp',['../test__RecursionError_8cpp.html',1,'']]],
  ['test_5frecursionguard_2ecpp',['test_RecursionGuard.cpp',['../test__RecursionGuard_8cpp.html',1,'']]],
  ['test_5freject_2ecpp',['test_Reject.cpp',['../test__Reject_8cpp.html',1,'']]],
  ['test_5frule_2ecpp',['test_Rule.cpp',['../test__Rule_8cpp.html',1,'']]],
  ['test_5frule_5fcomparison_2ecpp',['test_Rule_comparison.cpp',['../test__Rule__comparison_8cpp.html',1,'']]],
  ['test_5fsemaphore_2ecpp',['test_semaphore.cpp',['../test__semaphore_8cpp.html',1,'']]],
  ['test_5fserialinterface_2ecpp',['test_SerialInterface.cpp',['../test__SerialInterface_8cpp.html',1,'']]],
  ['test_5fserialport_2ecpp',['test_SerialPort.cpp',['../test__SerialPort_8cpp.html',1,'']]],
  ['test_5fudpinterface_2ecpp',['test_UDPInterface.cpp',['../test__UDPInterface_8cpp.html',1,'']]],
  ['test_5fudpsocket_2ecpp',['test_UDPSocket.cpp',['../test__UDPSocket_8cpp.html',1,'']]],
  ['test_5funixserialport_2ecpp',['test_UnixSerialPort.cpp',['../test__UnixSerialPort_8cpp.html',1,'']]],
  ['test_5funixudpsocket_2ecpp',['test_UnixUDPSocket.cpp',['../test__UnixUDPSocket_8cpp.html',1,'']]],
  ['test_5futility_2ecpp',['test_utility.cpp',['../test__utility_8cpp.html',1,'']]],
  ['threads',['Threads',['../classInterfaceThreader.html#aeec68c230354304288f1b9d85ab55085',1,'InterfaceThreader']]],
  ['to',['to',['../classIf.html#ade9def1807435e570539f1373c98be8c',1,'If::to(MAVSubnet subnet)'],['../classIf.html#a15f5cc79996ca6d8b278564f5332bc56',1,'If::to(const std::string &amp;subnet)']]],
  ['to_5fbytes',['to_bytes',['../group__utility.html#gae0001dbbe8bc2c3ab2e07aa26b871691',1,'utility.hpp']]],
  ['to_5flower',['to_lower',['../group__utility.html#gaf3b6fc16845cb8afbcd5a2ecc4b3664f',1,'to_lower(std::string string):&#160;utility.cpp'],['../group__utility.html#gaf3b6fc16845cb8afbcd5a2ecc4b3664f',1,'to_lower(std::string string):&#160;utility.cpp']]],
  ['type',['type',['../classIf.html#a98c92fe1adf29947204259a3c53f8dae',1,'If::type(unsigned long id)'],['../classIf.html#add791d170216e4488d0aba70f36710ae',1,'If::type(const std::string &amp;name)']]]
];
